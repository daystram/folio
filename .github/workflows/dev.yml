name: Dev

on:
  push:
    branches-ignore:
      - main
      - master

jobs:
  build-fe:
    name: Build folio-fe
    runs-on: Ubuntu-20.04
    defaults:
      run:
        working-directory: folio-fe
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 12.x
      - name: Install Dependencies
        run: yarn install
      - name: Build
        run: yarn build
      - name: Archive Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: |
            folio-fe/.next/
  image:
    name: Publish Image
    runs-on: Ubuntu-20.04
    needs: [build-fe]
    strategy:
      matrix:
        app: [fe]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set Development Version
        run: echo "RELEASE_VERSION=dev" >> $GITHUB_ENV
      - name: Build and Push Image
        uses: docker/build-push-action@v2
        with:
          context: folio-${{ matrix.app }}
          platforms: linux/amd64
          tags: daystram/folio:${{ matrix.app }}-${{ env.RELEASE_VERSION }}
          push: true
  chart:
    name: Publish Helm Chart
    runs-on: Ubuntu-20.04
    container: daystram/k8s-tools:latest
    needs: [image]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Set Development Version
        run: echo "RELEASE_VERSION=v0.0.0-development" >> $GITHUB_ENV
      - name: Initialize Git Credentials
        run: |
          git config --global user.name "${{ secrets.BOTDAYSTRAM_NAME }}"
          git config --global user.email "${{ secrets.BOTDAYSTRAM_EMAIL }}"
          mkdir -p ~/.ssh && eval `ssh-agent -s`
          echo "${{ secrets.BOTDAYSTRAM_KEY_FILE }}" | ssh-add -
          echo "${{ secrets.KUBECONFIG_FILE }}" > $KUBECONFIG && chmod 700 $KUBECONFIG
      - name: Deploy Chart
        run: |
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          git clone git@github.com:daystram/helm-charts.git
          cp -r .daystram helm-charts/docs/
          cd helm-charts/docs/
          curl -sfL https://charts.daystram.com/build.sh | sh -s - folio ${{ env.RELEASE_VERSION }}
          rm -rf .daystram/
          git add .
          'git commit -m "feat: added chart for folio@${{ env.RELEASE_VERSION }}"'
          git push
