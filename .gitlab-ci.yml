stages:
  - build
  - deploy

# ------------------------ folio-fe
build folio-fe:
  stage: build
  image: node:lts-alpine
  script:
    - cd folio-fe
    - yarn install --production
    - yarn build
  artifacts:
    paths:
      - folio-fe/.next/

deploy dev folio-fe:
  stage: deploy
  image: docker:19.03.12
  needs: ["build folio-fe"]
  environment:
    name: development-fe
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  services:
    - docker:19.03.12-dind
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - cd folio-fe
    - docker build -t $CI_REGISTRY_IMAGE:fe-dev .
    - docker push $CI_REGISTRY_IMAGE:fe-dev
  when: manual
  only:
    - branches
  except:
    - main

deploy prod folio-fe:
  stage: deploy
  image: docker:19.03.12
  needs: ["build folio-fe"]
  environment:
    name: production-fe
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  services:
    - docker:19.03.12-dind
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - cd folio-fe
    - docker build -t $CI_REGISTRY_IMAGE:fe -t $CI_REGISTRY_IMAGE:fe-$CI_COMMIT_TAG .
    - docker push $CI_REGISTRY_IMAGE:fe
    - docker push $CI_REGISTRY_IMAGE:fe-$CI_COMMIT_TAG
  when: on_success
  only:
    - tags
